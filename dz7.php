<?php
///----------------------------  Задание 1  -----------------------------
//Дан массив элементов 'one', 'two', 'three', 'four', 'five', 'six',
// при помощи функции usort и анонимной функции для сортировки нужно отсортировать
// этот массив таким образом, чтобы в итоге его элементы выстроились в
// таком порядке: 'two', 'one', 'four', 'three', 'six', 'five'.
echo "<br /><b>Задание 1</b><br />";
$m=['one','two','three','four','five','six'];
echo "Исходный массив: <pre>";
print_r($m);
echo "</pre>";

$massiv1=['one','two','three','four','five','six'];
$shablon=['two', 'one', 'four', 'three', 'six', 'five'];

usort($massiv1, function($key1, $key2) use ($shablon) {
    if(array_search($key1, $shablon) > array_search($key2, $shablon)) {
        return 1;
    }
    else{
        return -1;
    }
});
echo"Отсортированный массив: <pre>";
print_r($massiv1);
echo "</pre>";
///----------------------------  Задание 2  -----------------------------
//При помощи функции range создать массив целых чисел произвольной длины.
// При помощи функции array_filter и анонимной функции отфильтровать элементы массива
// таким образом, чтобы в нем остались только те элементы, которые делятся одновременно
// на 3, 2, 5 без остатка.
echo "<br /><b>Задание 2</b><br />";
$mass=range(10,100,5);
echo "Начальный массив: <pre>";
print_r($mass);
$mass2=array_filter($mass,function ($a){
    if ($a%2==0 and $a%3==0 and $a%5==0){
        return $a;
    }
});
echo "</pre><br>Отфильтрованный массив: <pre>";
print_r($mass2);
echo "</pre>";
///----------------------------  Задание 3  -----------------------------
//Дана строка - Walks Straight walked numbly through the destruction. Nothing left, no one alive..
// Разбить строку на массив слов (так, чтобы не осталось спец.символов - , .).
// При помощи функции usort и анонимной функции для сортировки отсортировать массив таким образом,
// чтобы его элементы выстроились от самого короткого слова к самому длинному.
echo "<br /><b>Задание 3</b><br />";
$str="Walks Straight walked numbly through the destruction. Nothing left, no one alive.. ";
echo "Строкa: $str<br />";
$str_array=array_filter(explode(" ", str_replace(",","",(str_replace(".","",$str)))));
//print_r($str_array);
usort($str_array,function ($a, $b){
    if (strlen($a) == strlen($b)) {
        return 0;
    }
    if (strlen($a) < strlen($b)) {
        return -1;
    }
    else{
        return 1;
    }
});
echo "Отсортированные слова:<br /><pre>";
print_r($str_array);
echo "</pre>";
///----------------------------  Задание 4  -----------------------------
//Создать функцию с именем sayHello, которая принимает один аргумент - строку
// $name(указать тип аргумента). Функция должна выводить сначала строку Привет, $name.
// А затем строку, в которой будет сказанно, сколько раз функция была вызвана в формате
// Всего поздоровались $n раз. Вызвать функцию несколько раз с разным значением параметра.
echo "<br /><b>Задание 4</b><br />";

function sayHello(string $name){
    static $n=1;
    echo "Привет, $name<br />";
    echo "Всего поздоровались $n раз<br />";
    $n++;
}

$names=['Вася', 'Петя', 'Коля', 'Саша', 'Дима', 'Олег'];
foreach ($names as $value){
    sayHello($value);
}

///----------------------------  Задание 5  -----------------------------
//Написать функцию, которая принимает один(!) аргумент - натуральное число.
// При каждом вызове функция должна возвращать среднее арифметическое значение
// переданных в нее чисел с учетом всех предыдущих вызовов.

echo "<br /><b>Задание 5</b><br />";

function sr_arifm(int $n){
    static $arr;
    $arr[]=$n;
    echo "Среднее арифметическое массива ";
    print_r($arr);
    $e=(array_sum($arr))/(count($arr));
    echo "РАВНО  ".$e."<br>";
    return $e;
}
$test_arr=[22,33,44,55,11];
foreach ($test_arr as $value){
    sr_arifm($value);
}


///----------------------------  Задание 6  ---------------------------
//Дано слово, состоящее только из строчных латинских букв.
// Напишите функцию, которая проверит, является ли это слово палиндромом.
// Выведите да или нет. При решении этой задачи нельзя использовать циклы,
// массивы и функции разворота строки. Рекурсия разрешена :)
echo "<br /><b>Задание 6</b><br />";
function IsPalin($str) {
    if ((strlen($str) == 1) or (strlen($str) == 0)) {
        echo "Данное слово является палиндромом";
    }
    else {
        if (substr($str,0,1) == substr($str,(strlen($str) - 1),1)) {
            return IsPalin(substr($str,1,strlen($str) -2));
        }
        else { echo "Данное слово НЕ является палиндромом"; }
    }
}
$str1="ETOTE";
echo "Исходная строка: $str1 <br />";
IsPalin($str1);

///----------------------------  Задание 7  ---------------------------
//*7. Дано число n, десятичная запись которого не содержит нулей.
//Получите число, записанное теми же цифрами, но в противоположном порядке.
//При решении этой задачи нельзя использовать циклы, строки, массивы, разрешается
//только рекурсия и целочисленная арифметика. Функция должна возвращать целое число,
//являющееся результатом работы программы, выводить число по одной цифре нельзя.
//Можно использовать дополнительные аргументы для передачи данных между рекурсивными вызовами.

echo "<br /><br /><b>Задание 7</b><br />";

$old_number = 12345;
echo "Исходное число: ".$old_number."<br>";
function recur_num($old_number){
    static $new_number=0;
    $new_number = $new_number*10 + $old_number%10;
    $old_number = floor($old_number/10);
   if ($old_number != 0){
      recur_num($old_number);
   }
 return $new_number;
}
echo "Число в противоположном порядке: ".recur_num($old_number);